name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Run regularly to test against upstream changes and prime the build cache
  schedule:
    - cron: 0 1 * * MON

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        gmakeconfig:
          - release
        gmakeplatform:
          - 64
        ocamlversion:
          - 4.14.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout ocaml-orx
        uses: actions/checkout@v2
        with:
          path: ocaml-orx

      - name: Checkout orx
        uses: actions/checkout@v2
        with:
          repository: orx/orx
          path: orx

      - name: Update apt repo
        run: sudo apt-get -qq update
        if: matrix.os == 'ubuntu-latest'

      - name: Install extra OS deps for orx
        run: sudo apt-get -y install freeglut3-dev libxrandr-dev
        if: matrix.os == 'ubuntu-latest'

      - name: orx setup
        working-directory: orx
        run: ./setup.sh
        if: matrix.os != 'windows-latest'

      - name: orx setup
        working-directory: orx
        run: ./setup.bat
        if: matrix.os == 'windows-latest'

      - name: orx build (gmake)
        working-directory: orx/code/build/linux/gmake
        run: make config=${{ matrix.gmakeconfig }}${{ matrix.gmakeplatform }}
        if: matrix.os == 'ubuntu-latest'

      - name: orx build (gmake)
        working-directory: orx/code/build/mac/gmake
        run: make config=${{ matrix.gmakeconfig }}${{ matrix.gmakeplatform }}
        if: matrix.os == 'macos-latest'

      - name: orx build (gmake)
        working-directory: orx/code/build/windows/gmake
        run: make config=${{ matrix.gmakeconfig }}${{ matrix.gmakeplatform }}
        if: matrix.os == 'windows-latest'

      - name: Set ORX environment
        run: echo "ORX=${{ github.workspace }}/orx/code" >> $GITHUB_ENV
        if: matrix.os != 'windows-latest'

      - name: Set ORX environment
        run: echo "ORX=${{ github.workspace }}/orx/code" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        if: matrix.os == 'windows-latest'

      - name: Setup OCaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocamlversion }}
          opam-local-packages: ocaml-orx/*.opam

      - name: Install opam dependencies
        working-directory: ocaml-orx
        run: opam install . --deps-only --with-test

      - name: Build ocaml-orx
        working-directory: ocaml-orx
        run: opam exec -- dune build
        env:
          ORX: ${{ env.ORX }}
